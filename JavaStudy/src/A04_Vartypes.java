
/*
      -- 기본형 ( 소문자로 시작한다)--
	                        
	  # 정수타입
	    8 16 32 64 128 256 512 1024
	  - byte (1byte, 8bit)  
	  
	    2^8개(256개)의 값을 표현 할 수 있음
	    표현 가능한 정수 범위는 : -128 ~ +127 *+는 0부터 센다*
	    
	    0000 0000 : 0
	    0000 0001 : 1
	    0000 0010 : 2
	    0000 0011 : 3
	    .
	    .
	    .
	    0111 1111 : 117
	    // 앞에가 1이면 음수
	    1000 0000 : -128 
	    1000 0010 : -126
	    .
	    .
	    .
	    1111 1111 : -1
	    0000 0000 :  0
	    
	  - short (2byte, 16bit)
	  
	  	2^16개(65536개)의 값을 표현 할 수 있음
	  	표현 가능한 정수 범위는 : -(2^15) ~ +(2^15 -1) * +는 0부터 센다 *
	  	0000 0000 0000 0000 : 0
	  	...
	  	0111 1111 1111 1111 : 32767
	  	1000 0000 0000 0000 : -32768
	  	...
	  	1111 1111 1111 1111 : -1
	  	
	  - char (2byte, 16bit, 양수만)
	  
	    2^16개(65536개)의 값을 표현 할 수 있음
	  	표현 가능한 정수 범위는 : 0 ~ 65535(2^16 -1) * +는 0부터 센다 *
	  	
	  - int (4byte, 64bit)
	  
	    2^32개(약 43억개)의 값을 표현 할 수 있음
	  	표현 가능한 정수 범위는 : -(2^31) ~ +(2^31-1) * +는 0부터 센다 *
	  	0000 0000 0000 0000 0000 0000 0000 0000
	  	
	  - long (8byte, 128bit) 
	  
	    0000 0000 0000 0000 0000 0000 0000 0000
	    0000 0000 0000 0000 0000 0000 0000 0000
	    
	  # 실수타입
	  
		  - fioat  (4byte)
		  - double (8byte)
 * 실수가 사용 될 일이 거의 없음
	    
	  # 참/거짓타입
	  
	  	- boolean
	  
	                        -- 참조형(대문자로 시작한다) -- 
	  
	  #문자열
 *String (동적 데이터)
 *	    - 문자열을 저장 할 수 있는 타입
	    xx
	   
	   
	   
	  #그 외 모든 클래스들
	  
	  
 */



public class A04_Vartypes {
	public static void main(String[] args) {
		// 변수를 다르게 사용하는 이유 = 비트수 절약 (램절약)
		// 하지만 타입 충돌로 인해 int를 주로 사용하는 편
		// 드론과 같은경우등 용량을 줄여야할 상황일때 생각하고 활용헤야함
		// 웹개발 에서는 신경 안써도 된다
		byte age = 10; 
	
		byte _byte   = 127;
		char _char   = 6553;
		short _short = 32767;
		int _int     = 2_100000_000;
		
		//int 범위를 벗어나는 정수 리터럴은 뒤에 L을 들여야한다, 소문자 l도 가능
		long _long   = 2100000000000L;
		_long = 2111111111111111111l;
		
		// 소수 리터럴은 기본적으로 double 타입이기 때문에
		// float 타입 리터럴은 뒤에 F를 붙여 표시 해야한다
		float _float = 123.123456F;
		double _double = 123.123456;
		
		// boolean 타입의 변수에는 boolean 타입 리터럴인 true/false만 
		// 저장 할 수 있다
		boolean rich = true;
		//boolean rich = false;
		Boolean programmer = true;
		boolean wearable = false;
		// ※ 에러는 빨간줄 ㅣ노란줄은 경고,이해할수가 없다※
		System.out.println("_byte에 들어있는 값 : " + _byte);
		String message = "Hello, World";
		System.out.println(message);
		
		// 정수 타입에 문자 저장하기
		// - 다른 정수타입에도 문자를 저장 할 수 있지만
		//   문자 리터럴은 char 타입에 저장하는것이 가장 올바르다
		int ch1 = 'T';
		byte ch2 = '!';
		// short ch3 = '가';
		//변수는 한번에 여러개 가능
		char ch4 = '가', ch5, ch6, ch7;
		
		System.out.println(ch1);
		System.out.println(ch2);
		

	}

}
